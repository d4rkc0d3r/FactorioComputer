RAM:
  A: address to add D to
  B: A delayed by 2 ticks
  C: A delayed by 3 ticks
  D: data to write to A
  R: address to write D to
  S: R delayed by 2 ticks
  T: R delayed by 3 ticks
  X: address to read IN1
  Y: address to read IN2
  Z: address to read OUTADDR
  BLACK = -1: (3) 0 all cells
  
ROM:
  I: address to load instruction
  
ALU:
  GREEN: IN1 for 4 tick operations
  RED: IN2 for 4 tick operations
  CRUDE_OIL: (3) add (CRUDE_OIL * IN1) + (CRUDE_OIL * IN2) to B/S
  WATER: (3) add WATER / IN1 to B/S
  STEAM: (3) add IN1 / STEAM to B/S
  HEAVY_OIL: (3) add HEAVY_OIL % IN1 to B/S
  LIGHT_OIL: (3) add IN1 % HEAVY_OIL to B/S
  PETROLEUM: (3) add PETROLEUM AND IN1 to B/S
  EMPTY_BARREL = 1: (4) add IN1 + IN2 to C/T
  CRUDE_OIL_BARREL = 1: (4) add IN1 - IN2 to C/T
  HEAVY_OIL_BARREL = 1: (4) add IN1 * IN2 to C/T
  LIGHT_OIL_BARREL = 1: (4) add IN1 / IN2 to C/T
  LUBRICANT_BARREL = 1: (4) add IN1 % IN2 to C/T
  PETROLEUM_BARREL = 1: (4) add IN1 ^ IN2 to C/T
  ACID_BARREL = 1: (4) add IN1 << IN2 to C/T
  WATER_BARREL = 1: (4) add IN1 >> IN2 to C/T
  ELECTRONIC_CIRCUIT = 1: (4) add IN1 AND IN2 to C/T
  ADVANCED_CIRCUIT = 1: (4) add IN1 OR IN2 to C/T
  PROCESSING_UNIT = 1: (4) add IN1 XOR IN2 to C/T
  
BRANCH CONTROL:
  L: address for is lower
  E: address for is equal
  G: address for is greater
  J: compare IN1 to J
  uranium-238: (3) compare IN1 to J
  uranium-235: (4) compare IN1 to IN2
  N: (2) next instruction address
  P: (3) next instruction address
  Q: (4) next instruction address
